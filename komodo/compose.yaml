name: komodo

services:
  # Database service
  database:
    container_name: komodo-database
    image: mongo
    command: --quiet --wiredTigerCacheSizeGB 0.25
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    labels:
      - komodo.skip=1 # Prevent Komodo from stopping with StopAllContainers

  # Core service
  core:
    container_name: komodo-core
    image: ghcr.io/moghtech/komodo-core:latest
    restart: unless-stopped
    depends_on:
      - database
    environment:
      - TZ=${TZ}
      - KOMODO_TITLE=Komodo
      - KOMODO_HOST=https://komodo.${DOMAIN}
      - KOMODO_PASSKEY=${PERIPHERY_PASSKEY}
      - KOMODO_DATABASE_ADDRESS=database:27017
      - KOMODO_DATABASE_USERNAME=${DB_USERNAME}
      - KOMODO_DATABASE_PASSWORD=${DB_PASSWORD}
      - KOMODO_FIRST_SERVER=https://periphery:8120
      - KOMODO_FIRST_SERVER_NAME=Roach
      - KOMODO_LOCAL_AUTH=true
      - KOMODO_INIT_ADMIN_USERNAME=${ADMIN_USERNAME}
      - KOMODO_INIT_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - KOMODO_DISABLE_USER_REGISTRATION=true
      - KOMODO_JWT_SECRET=${JWT_SECRET}
      - KOMODO_OIDC_ENABLED=true
      - KOMODO_OIDC_PROVIDER=https://auth.${DOMAIN}/application/o/komodo/
      - KOMODO_OIDC_CLIENT_ID=${OIDC_CLIENT_ID}
      - KOMODO_OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET}
    networks:
      - default
      - core
    volumes:
      - ${HOST_APPDATA}/komodo/backups:/backups # Store dated backups of the database - https://komo.do/docs/setup/backup
      - ${HOST_APPDATA}/komodo/syncs:/syncs # Store sync files on server
    labels:
      - komodo.skip=1 # Prevent Komodo from stopping with StopAllContainers
      - traefik.enable=true
      - traefik.http.routers.komodo.rule=Host(`komodo.${DOMAIN}`)
      - traefik.http.routers.komodo.tls.certresolver=cloudflare
      - traefik.http.services.komodo.loadbalancer.server.port=9120
      - traefik.docker.network=core
      - homepage.group=Core
      - homepage.name=Komodo
      - homepage.description=Docker management platform
      - homepage.icon=komodo
      - homepage.href=https://komodo.${DOMAIN}
      - homepage.widget.type=komodo
      - homepage.widget.url=http://komodo-core:9120
      - homepage.widget.key=${KOMODO_API_KEY}
      - homepage.widget.secret=${KOMODO_API_SECRET}

  # Periphery service
  periphery:
    container_name: komodo-periphery
    image: ghcr.io/moghtech/komodo-periphery:latest
    restart: unless-stopped
    environment:
      - PERIPHERY_ROOT_DIRECTORY=${PERIPHERY_ROOT_DIRECTORY}
      - PERIPHERY_PASSKEYS=${PERIPHERY_PASSKEY}
      - PERIPHERY_DISABLE_TERMINALS=false # Specify whether to disable the terminals feature
      - PERIPHERY_SSL_ENABLED=true # Enable SSL using self signed certificates.
      - PERIPHERY_INCLUDE_DISK_MOUNTS=/etc/hostname
      - PERIPHERY_LOGGING_PRETTY=false
      - PERIPHERY_PRETTY_STARTUP_CONFIG=false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Mount external docker socket
      - /proc:/proc # Allow Periphery to see processes outside of container
      - ${PERIPHERY_ROOT_DIRECTORY}:${PERIPHERY_ROOT_DIRECTORY} # Periphery root directory
    labels:
      - komodo.skip=1 # Prevent Komodo from stopping with StopAllContainers

volumes:
  mongo-data:
    name: komodo-mongo-data
  mongo-config:
    name: komodo-mongo-config

networks:
  default:
    name: komodo
    driver: bridge
  core:
    external: true
